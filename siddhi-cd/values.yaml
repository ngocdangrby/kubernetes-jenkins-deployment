namespace: jenkins
image: 'aaquiff/jenkins-docker-kube:latest'
wso2Username: <WSO2_SUBSCRIPTION_USERNAME>
wso2Password: <WSO2_SUBSCRIPTION_PASSWORD>

# Admin credentials of jenkins instance to be created
jenkins:
  username: <JENKINS_USERNAME>
  password: <JENKINS_PASSWORD>

registry:
  server: 'https://index.docker.io/v1/'
  username: <REGISTRY_USERNAME>
  password: <REGISTRY_PASSWORD>
  email: <REGISTRY_EMAIL>
  address: index.docker.io

github:
  username: <GITHUB_USERNAME>
  password: <GITHUB_PASSWORD>

# applications:
#   - name: 
#     email: <WSO2_USERNAME>
#     testScript:
#       path: tests
#       command: test.sh
#     chart:
#       customChart: true
#       name: 
#       repo: 
#     images:
#       - wso2Image:
#         organization:
#         repository:
#         gitRepo:

# Values for Spinnaker chart
spinnaker:
  dockerRegistries:
    - name: dockerhub
      address: index.docker.io
      username: <REGISTRY_USERNAME>
      password: <REGISTRY_PASSWORD>
      email: <REGISTRY_EMAIL>
      repositories:
        <REPOSITORIES>
  halyard:
    spinnakerVersion: 1.13.8
    image:
      tag: 1.20.2
    additionalScripts:
      create: true
      data:
        enable_ci.sh: |-
          echo "Configuring jenkins master"
          USERNAME="<JENKINS_USERNAME>"
          PASSWORD="<JENKINS_PASSWORD>"
          $HAL_COMMAND config ci jenkins enable
          echo $PASSWORD | $HAL_COMMAND config ci jenkins master edit master --address http://jenkins-service.jenkins.svc.cluster.local:8080 --username $USERNAME --password || echo $PASSWORD | $HAL_COMMAND config ci jenkins master add master --address http://jenkins-service.jenkins.svc.cluster.local:8080 --username $USERNAME --password
          $HAL_COMMAND config features edit --pipeline-templates true
  ingress:
    enabled: true
    host: spinnaker
    annotations:
      ingress.kubernetes.io/ssl-redirect: 'true'
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    tls:
      - secretName: '-tls'
        hosts:
          - domain.com
  ingressGate:
    enabled: true
    host: gate.spinnaker
    annotations:
      ingress.kubernetes.io/ssl-redirect: 'true'
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    tls:
     - secretName: -tls
       hosts:
         - domain.com

elastic-stack:
  kibana:
    ingress:
      enabled: true
      hosts:
        - kibana
